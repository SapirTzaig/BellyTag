{"remainingRequest":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\src\\components\\Upload.vue?vue&type=template&id=44fc689e&scoped=true","dependencies":[{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\src\\components\\Upload.vue","mtime":1741104117189},{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741104842426},{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\babel-loader\\lib\\index.js","mtime":1741104845168},{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741104848327},{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741104842426},{"path":"C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741104845835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0idXBsb2FkIj4NCiAgICAgIDxoMT5VcGxvYWQgTWVkaWNhbCBEb2N1bWVudDwvaDE+DQogICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgQGNoYW5nZT0iaGFuZGxlRmlsZVVwbG9hZCIgLz4NCiAgICAgIA0KICAgICAgPCEtLSBEaXNwbGF5IHRoZSBleHRyYWN0ZWQgdGV4dCBmcm9tIFBERiAtLT4NCiAgICAgIDxkaXYgdi1pZj0iZXh0cmFjdGVkVGV4dCI+DQogICAgICAgIDxoMj5FeHRyYWN0ZWQgVGV4dDo8L2gyPg0KICAgICAgICA8cHJlPnt7IGV4dHJhY3RlZFRleHQgfX08L3ByZT4NCiAgICAgIDwvZGl2Pg0KICANCiAgICAgIDwhLS0gRGlzcGxheSB0aGUgTExNIGFuYWx5c2lzIC0tPg0KICAgICAgPGRpdiB2LWlmPSJhbmFseXNpcyI+DQogICAgICAgIDxoMj5BbmFseXNpczo8L2gyPg0KICAgICAgICA8cHJlPnt7IGFuYWx5c2lzIH19PC9wcmU+DQogICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAg"},{"version":3,"sources":["C:\\Users\\sapir\\OneDrive\\Documents\\GitHub\\BellyTag\\src\\components\\Upload.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;MAE/C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/sapir/OneDrive/Documents/GitHub/BellyTag/src/components/Upload.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"upload\">\r\n      <h1>Upload Medical Document</h1>\r\n      <input type=\"file\" @change=\"handleFileUpload\" />\r\n      \r\n      <!-- Display the extracted text from PDF -->\r\n      <div v-if=\"extractedText\">\r\n        <h2>Extracted Text:</h2>\r\n        <pre>{{ extractedText }}</pre>\r\n      </div>\r\n  \r\n      <!-- Display the LLM analysis -->\r\n      <div v-if=\"analysis\">\r\n        <h2>Analysis:</h2>\r\n        <pre>{{ analysis }}</pre>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        extractedText: null,\r\n        analysis: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async handleFileUpload(event) {\r\n        const file = event.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n  \r\n        const response = await fetch(\"http://localhost:5000/upload\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n  \r\n        const result = await response.json();\r\n        if (result.extracted_text) {\r\n          this.extractedText = result.extracted_text;\r\n          this.analysis = result.analysis;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .upload {\r\n    max-width: 600px;\r\n    margin: 50px auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  input[type=\"file\"] {\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  pre {\r\n    background-color: #f4f4f4;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n  }\r\n  </style>\r\n  "]}]}